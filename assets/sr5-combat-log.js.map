{"version":3,"file":"sr5-combat-log.js","mappings":"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","sources":["webpack://dashifen-sr5-combat-log/./assets/scripts/components/combat-log.vue?ff08","webpack://dashifen-sr5-combat-log/./node_modules/css-loader/dist/runtime/api.js","webpack://dashifen-sr5-combat-log/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://dashifen-sr5-combat-log/./assets/scripts/components/combat-log.vue?cdac","webpack://dashifen-sr5-combat-log/./node_modules/vue-style-loader/lib/listToStyles.js","webpack://dashifen-sr5-combat-log/./node_modules/vue-style-loader/lib/addStylesClient.js","webpack://dashifen-sr5-combat-log/webpack/bootstrap","webpack://dashifen-sr5-combat-log/webpack/runtime/compat get default export","webpack://dashifen-sr5-combat-log/webpack/runtime/define property getters","webpack://dashifen-sr5-combat-log/webpack/runtime/global","webpack://dashifen-sr5-combat-log/webpack/runtime/hasOwnProperty shorthand","webpack://dashifen-sr5-combat-log/webpack/runtime/make namespace object","webpack://dashifen-sr5-combat-log/./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://dashifen-sr5-combat-log/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://dashifen-sr5-combat-log/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://dashifen-sr5-combat-log/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://dashifen-sr5-combat-log/./assets/scripts/components/combat-log.vue","webpack://dashifen-sr5-combat-log/./assets/scripts/components/combat-log.vue?de5e","webpack://dashifen-sr5-combat-log/./assets/scripts/sr5-combat-log.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"table[data-v-f58361dc]{border:1px solid black;border-collapse:collapse;width:100%}td[data-v-f58361dc],th[data-v-f58361dc]{padding:.25rem;text-align:left}thead th[data-v-f58361dc]{vertical-align:bottom}thead th #init[data-v-f58361dc],thead th #dice[data-v-f58361dc]{width:50px}tbody tr[data-v-f58361dc]:hover{background:antiquewhite}tbody tr td[data-v-f58361dc],tbody tr th[data-v-f58361dc]{border-top:1px solid black;vertical-align:top}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./assets/scripts/components/combat-log.vue\"],\"names\":[],\"mappings\":\"AACE,uBACE,sBAAuB,CACvB,wBAAyB,CACzB,UAAW,CACZ,wCAGC,cAAe,CACf,eAAgB,CACjB,0BAGC,qBAAsB,CADxB,gEAKI,UAAW,CACZ,gCAKC,uBAAwB,CAF5B,0DAMI,0BAA2B,CAC3B,kBAAmB\",\"sourcesContent\":[\"\\n  table {\\n    border: 1px solid black;\\n    border-collapse: collapse;\\n    width: 100%;\\n  }\\n\\n  td, th {\\n    padding: .25rem;\\n    text-align: left;\\n  }\\n\\n  thead th {\\n    vertical-align: bottom;\\n\\n    #init,\\n    #dice {\\n      width: 50px;\\n    }\\n  }\\n\\n  tbody tr {\\n    &:hover {\\n      background: antiquewhite;\\n    }\\n\\n    td, th {\\n      border-top: 1px solid black;\\n      vertical-align: top;\\n    }\\n  }\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[5].use[0]!./combat-log.vue?vue&type=style&index=0&id=f58361dc&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"444fcf6c\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[5].use[0]!./combat-log.vue?vue&type=style&index=0&id=f58361dc&lang=scss&scoped=true\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[5].use[0]!./combat-log.vue?vue&type=style&index=0&id=f58361dc&lang=scss&scoped=true\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(value, _shallow = false) {\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._rawValue = _shallow ? value : toRaw(value);\r\n        this._value = _shallow ? value : convert(value);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        newVal = this._shallow ? newVal : toRaw(newVal);\r\n        if (hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        if (self._dirty) {\r\n            self._value = this.effect();\r\n            self._dirty = false;\r\n        }\r\n        track(self, \"get\" /* GET */, 'value');\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isReactive, effect, stop, ref, reactive, shallowReactive, trigger, isProxy, shallowReadonly, track, markRaw, proxyRefs, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction as isFunction$1, isPromise as isPromise$1, isArray, extend, hasOwn, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, isModelListener, remove, NOOP, hasChanged, isObject as isObject$1, isSet, isMap, isPlainObject, invokeArrayFns, def, isReservedProp, EMPTY_ARR, capitalize, toRawType, makeMap, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction$1(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction$1(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise$1(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if ((process.env.NODE_ENV !== 'production') && checkRecursiveUpdates(seen, job)) {\r\n                    continue;\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length ||\r\n            pendingPreFlushCbs.length ||\r\n            pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (key !== '__file' && !(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment: Comment$1,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nconst deprecationData = {\r\n    [\"GLOBAL_MOUNT\" /* GLOBAL_MOUNT */]: {\r\n        message: `The global app bootstrapping API has changed: vm.$mount() and the \"el\" ` +\r\n            `option have been removed. Use createApp(RootComponent).mount() instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#mounting-app-instance`\r\n    },\r\n    [\"GLOBAL_MOUNT_CONTAINER\" /* GLOBAL_MOUNT_CONTAINER */]: {\r\n        message: `Vue detected directives on the mount container. ` +\r\n            `In Vue 3, the container is no longer considered part of the template ` +\r\n            `and will not be processed/replaced.`,\r\n        link: `https://v3.vuejs.org/guide/migration/mount-changes.html`\r\n    },\r\n    [\"GLOBAL_EXTEND\" /* GLOBAL_EXTEND */]: {\r\n        message: `Vue.extend() has been removed in Vue 3. ` +\r\n            `Use defineComponent() instead.`,\r\n        link: `https://v3.vuejs.org/api/global-api.html#definecomponent`\r\n    },\r\n    [\"GLOBAL_PROTOTYPE\" /* GLOBAL_PROTOTYPE */]: {\r\n        message: `Vue.prototype is no longer available in Vue 3. ` +\r\n            `Use app.config.globalProperties instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#vue-prototype-replaced-by-config-globalproperties`\r\n    },\r\n    [\"GLOBAL_SET\" /* GLOBAL_SET */]: {\r\n        message: `Vue.set() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"GLOBAL_DELETE\" /* GLOBAL_DELETE */]: {\r\n        message: `Vue.delete() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"GLOBAL_OBSERVABLE\" /* GLOBAL_OBSERVABLE */]: {\r\n        message: `Vue.observable() has been removed. ` +\r\n            `Use \\`import { reactive } from \"vue\"\\` from Composition API instead.`,\r\n        link: `https://v3.vuejs.org/api/basic-reactivity.html`\r\n    },\r\n    [\"GLOBAL_PRIVATE_UTIL\" /* GLOBAL_PRIVATE_UTIL */]: {\r\n        message: `Vue.util has been removed. Please refactor to avoid its usage ` +\r\n            `since it was an internal API even in Vue 2.`\r\n    },\r\n    [\"CONFIG_SILENT\" /* CONFIG_SILENT */]: {\r\n        message: `config.silent has been removed because it is not good practice to ` +\r\n            `intentionally suppress warnings. You can use your browser console's ` +\r\n            `filter features to focus on relevant messages.`\r\n    },\r\n    [\"CONFIG_DEVTOOLS\" /* CONFIG_DEVTOOLS */]: {\r\n        message: `config.devtools has been removed. To enable devtools for ` +\r\n            `production, configure the __VUE_PROD_DEVTOOLS__ compile-time flag.`,\r\n        link: `https://github.com/vuejs/vue-next/tree/master/packages/vue#bundler-build-feature-flags`\r\n    },\r\n    [\"CONFIG_KEY_CODES\" /* CONFIG_KEY_CODES */]: {\r\n        message: `config.keyCodes has been removed. ` +\r\n            `In Vue 3, you can directly use the kebab-case key names as v-on modifiers.`,\r\n        link: `https://v3.vuejs.org/guide/migration/keycode-modifiers.html`\r\n    },\r\n    [\"CONFIG_PRODUCTION_TIP\" /* CONFIG_PRODUCTION_TIP */]: {\r\n        message: `config.productionTip has been removed.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#config-productiontip-removed`\r\n    },\r\n    [\"CONFIG_IGNORED_ELEMENTS\" /* CONFIG_IGNORED_ELEMENTS */]: {\r\n        message: () => {\r\n            let msg = `config.ignoredElements has been removed.`;\r\n            if (isRuntimeOnly()) {\r\n                msg += ` Pass the \"isCustomElement\" option to @vue/compiler-dom instead.`;\r\n            }\r\n            else {\r\n                msg += ` Use config.isCustomElement instead.`;\r\n            }\r\n            return msg;\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#config-ignoredelements-is-now-config-iscustomelement`\r\n    },\r\n    [\"CONFIG_WHITESPACE\" /* CONFIG_WHITESPACE */]: {\r\n        // this warning is only relevant in the full build when using runtime\r\n        // compilation, so it's put in the runtime compatConfig list.\r\n        message: `Vue 3 compiler's whitespace option will default to \"condense\" instead of ` +\r\n            `\"preserve\". To suppress this warning, provide an explicit value for ` +\r\n            `\\`config.compilerOptions.whitespace\\`.`\r\n    },\r\n    [\"CONFIG_OPTION_MERGE_STRATS\" /* CONFIG_OPTION_MERGE_STRATS */]: {\r\n        message: `config.optionMergeStrategies no longer exposes internal strategies. ` +\r\n            `Use custom merge functions instead.`\r\n    },\r\n    [\"INSTANCE_SET\" /* INSTANCE_SET */]: {\r\n        message: `vm.$set() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"INSTANCE_DELETE\" /* INSTANCE_DELETE */]: {\r\n        message: `vm.$delete() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"INSTANCE_DESTROY\" /* INSTANCE_DESTROY */]: {\r\n        message: `vm.$destroy() has been removed. Use app.unmount() instead.`,\r\n        link: `https://v3.vuejs.org/api/application-api.html#unmount`\r\n    },\r\n    [\"INSTANCE_EVENT_EMITTER\" /* INSTANCE_EVENT_EMITTER */]: {\r\n        message: `vm.$on/$once/$off() have been removed. ` +\r\n            `Use an external event emitter library instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/events-api.html`\r\n    },\r\n    [\"INSTANCE_EVENT_HOOKS\" /* INSTANCE_EVENT_HOOKS */]: {\r\n        message: event => `\"${event}\" lifecycle events are no longer supported. From templates, ` +\r\n            `use the \"vnode\" prefix instead of \"hook:\". For example, @${event} ` +\r\n            `should be changed to @vnode-${event.slice(5)}. ` +\r\n            `From JavaScript, use Composition API to dynamically register lifecycle ` +\r\n            `hooks.`,\r\n        link: `https://v3.vuejs.org/guide/migration/vnode-lifecycle-events.html`\r\n    },\r\n    [\"INSTANCE_CHILDREN\" /* INSTANCE_CHILDREN */]: {\r\n        message: `vm.$children has been removed. Consider refactoring your logic ` +\r\n            `to avoid relying on direct access to child components.`,\r\n        link: `https://v3.vuejs.org/guide/migration/children.html`\r\n    },\r\n    [\"INSTANCE_LISTENERS\" /* INSTANCE_LISTENERS */]: {\r\n        message: `vm.$listeners has been removed. In Vue 3, parent v-on listeners are ` +\r\n            `included in vm.$attrs and it is no longer necessary to separately use ` +\r\n            `v-on=\"$listeners\" if you are already using v-bind=\"$attrs\". ` +\r\n            `(Note: the Vue 3 behavior only applies if this compat config is disabled)`,\r\n        link: `https://v3.vuejs.org/guide/migration/listeners-removed.html`\r\n    },\r\n    [\"INSTANCE_SCOPED_SLOTS\" /* INSTANCE_SCOPED_SLOTS */]: {\r\n        message: `vm.$scopedSlots has been removed. Use vm.$slots instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/slots-unification.html`\r\n    },\r\n    [\"INSTANCE_ATTRS_CLASS_STYLE\" /* INSTANCE_ATTRS_CLASS_STYLE */]: {\r\n        message: componentName => `Component <${componentName ||\r\n            'Anonymous'}> has \\`inheritAttrs: false\\` but is ` +\r\n            `relying on class/style fallthrough from parent. In Vue 3, class/style ` +\r\n            `are now included in $attrs and will no longer fallthrough when ` +\r\n            `inheritAttrs is false. If you are already using v-bind=\"$attrs\" on ` +\r\n            `component root it should render the same end result. ` +\r\n            `If you are binding $attrs to a non-root element and expecting ` +\r\n            `class/style to fallthrough on root, you will need to now manually bind ` +\r\n            `them on root via :class=\"$attrs.class\".`,\r\n        link: `https://v3.vuejs.org/guide/migration/attrs-includes-class-style.html`\r\n    },\r\n    [\"OPTIONS_DATA_FN\" /* OPTIONS_DATA_FN */]: {\r\n        message: `The \"data\" option can no longer be a plain object. ` +\r\n            `Always use a function.`,\r\n        link: `https://v3.vuejs.org/guide/migration/data-option.html`\r\n    },\r\n    [\"OPTIONS_DATA_MERGE\" /* OPTIONS_DATA_MERGE */]: {\r\n        message: (key) => `Detected conflicting key \"${key}\" when merging data option values. ` +\r\n            `In Vue 3, data keys are merged shallowly and will override one another.`,\r\n        link: `https://v3.vuejs.org/guide/migration/data-option.html#mixin-merge-behavior-change`\r\n    },\r\n    [\"OPTIONS_BEFORE_DESTROY\" /* OPTIONS_BEFORE_DESTROY */]: {\r\n        message: `\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`\r\n    },\r\n    [\"OPTIONS_DESTROYED\" /* OPTIONS_DESTROYED */]: {\r\n        message: `\\`destroyed\\` has been renamed to \\`unmounted\\`.`\r\n    },\r\n    [\"WATCH_ARRAY\" /* WATCH_ARRAY */]: {\r\n        message: `\"watch\" option or vm.$watch on an array value will no longer ` +\r\n            `trigger on array mutation unless the \"deep\" option is specified. ` +\r\n            `If current usage is intended, you can disable the compat behavior and ` +\r\n            `suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"WATCH_ARRAY\" /* WATCH_ARRAY */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/watch.html`\r\n    },\r\n    [\"PROPS_DEFAULT_THIS\" /* PROPS_DEFAULT_THIS */]: {\r\n        message: (key) => `props default value function no longer has access to \"this\". The compat ` +\r\n            `build only offers access to this.$options.` +\r\n            `(found in prop \"${key}\")`,\r\n        link: `https://v3.vuejs.org/guide/migration/props-default-this.html`\r\n    },\r\n    [\"CUSTOM_DIR\" /* CUSTOM_DIR */]: {\r\n        message: (legacyHook, newHook) => `Custom directive hook \"${legacyHook}\" has been removed. ` +\r\n            `Use \"${newHook}\" instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/custom-directives.html`\r\n    },\r\n    [\"V_FOR_REF\" /* V_FOR_REF */]: {\r\n        message: `Ref usage on v-for no longer creates array ref values in Vue 3. ` +\r\n            `Consider using function refs or refactor to avoid ref usage altogether.`,\r\n        link: `https://v3.vuejs.org/guide/migration/array-refs.html`\r\n    },\r\n    [\"V_ON_KEYCODE_MODIFIER\" /* V_ON_KEYCODE_MODIFIER */]: {\r\n        message: `Using keyCode as v-on modifier is no longer supported. ` +\r\n            `Use kebab-case key name modifiers instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/keycode-modifiers.html`\r\n    },\r\n    [\"ATTR_FALSE_VALUE\" /* ATTR_FALSE_VALUE */]: {\r\n        message: (name) => `Attribute \"${name}\" with v-bind value \\`false\\` will render ` +\r\n            `${name}=\"false\" instead of removing it in Vue 3. To remove the attribute, ` +\r\n            `use \\`null\\` or \\`undefined\\` instead. If the usage is intended, ` +\r\n            `you can disable the compat behavior and suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"ATTR_FALSE_VALUE\" /* ATTR_FALSE_VALUE */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/attribute-coercion.html`\r\n    },\r\n    [\"ATTR_ENUMERATED_COERCION\" /* ATTR_ENUMERATED_COERCION */]: {\r\n        message: (name, value, coerced) => `Enumerated attribute \"${name}\" with v-bind value \\`${value}\\` will ` +\r\n            `${value === null ? `be removed` : `render the value as-is`} instead of coercing the value to \"${coerced}\" in Vue 3. ` +\r\n            `Always use explicit \"true\" or \"false\" values for enumerated attributes. ` +\r\n            `If the usage is intended, ` +\r\n            `you can disable the compat behavior and suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"ATTR_ENUMERATED_COERCION\" /* ATTR_ENUMERATED_COERCION */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/attribute-coercion.html`\r\n    },\r\n    [\"TRANSITION_CLASSES\" /* TRANSITION_CLASSES */]: {\r\n        message: `` // this feature cannot be runtime-detected\r\n    },\r\n    [\"TRANSITION_GROUP_ROOT\" /* TRANSITION_GROUP_ROOT */]: {\r\n        message: `<TransitionGroup> no longer renders a root <span> element by ` +\r\n            `default if no \"tag\" prop is specified. If you do not rely on the span ` +\r\n            `for styling, you can disable the compat behavior and suppress this ` +\r\n            `warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"TRANSITION_GROUP_ROOT\" /* TRANSITION_GROUP_ROOT */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/transition-group.html`\r\n    },\r\n    [\"COMPONENT_ASYNC\" /* COMPONENT_ASYNC */]: {\r\n        message: (comp) => {\r\n            const name = getComponentName(comp);\r\n            return (`Async component${name ? ` <${name}>` : `s`} should be explicitly created via \\`defineAsyncComponent()\\` ` +\r\n                `in Vue 3. Plain functions will be treated as functional components in ` +\r\n                `non-compat build. If you have already migrated all async component ` +\r\n                `usage and intend to use plain functions for functional components, ` +\r\n                `you can disable the compat behavior and suppress this ` +\r\n                `warning with:` +\r\n                `\\n\\n  configureCompat({ ${\"COMPONENT_ASYNC\" /* COMPONENT_ASYNC */}: false })\\n`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/async-components.html`\r\n    },\r\n    [\"COMPONENT_FUNCTIONAL\" /* COMPONENT_FUNCTIONAL */]: {\r\n        message: (comp) => {\r\n            const name = getComponentName(comp);\r\n            return (`Functional component${name ? ` <${name}>` : `s`} should be defined as a plain function in Vue 3. The \"functional\" ` +\r\n                `option has been removed. NOTE: Before migrating to use plain ` +\r\n                `functions for functional components, first make sure that all async ` +\r\n                `components usage have been migrated and its compat behavior has ` +\r\n                `been disabled.`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/functional-components.html`\r\n    },\r\n    [\"COMPONENT_V_MODEL\" /* COMPONENT_V_MODEL */]: {\r\n        message: (comp) => {\r\n            const configMsg = `opt-in to ` +\r\n                `Vue 3 behavior on a per-component basis with \\`compatConfig: { ${\"COMPONENT_V_MODEL\" /* COMPONENT_V_MODEL */}: false }\\`.`;\r\n            if (comp.props &&\r\n                (isArray(comp.props)\r\n                    ? comp.props.includes('modelValue')\r\n                    : hasOwn(comp.props, 'modelValue'))) {\r\n                return (`Component delcares \"modelValue\" prop, which is Vue 3 usage, but ` +\r\n                    `is running under Vue 2 compat v-model behavior. You can ${configMsg}`);\r\n            }\r\n            return (`v-model usage on component has changed in Vue 3. Component that expects ` +\r\n                `to work with v-model should now use the \"modelValue\" prop and emit the ` +\r\n                `\"update:modelValue\" event. You can update the usage and then ${configMsg}`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/v-model.html`\r\n    },\r\n    [\"RENDER_FUNCTION\" /* RENDER_FUNCTION */]: {\r\n        message: `Vue 3's render function API has changed. ` +\r\n            `You can opt-in to the new API with:` +\r\n            `\\n\\n  configureCompat({ ${\"RENDER_FUNCTION\" /* RENDER_FUNCTION */}: false })\\n` +\r\n            `\\n  (This can also be done per-component via the \"compatConfig\" option.)`,\r\n        link: `https://v3.vuejs.org/guide/migration/render-function-api.html`\r\n    },\r\n    [\"FILTERS\" /* FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/filters.html`\r\n    },\r\n    [\"PRIVATE_APIS\" /* PRIVATE_APIS */]: {\r\n        message: name => `\"${name}\" is a Vue 2 private API that no longer exists in Vue 3. ` +\r\n            `If you are seeing this warning only due to a dependency, you can ` +\r\n            `suppress this warning via { PRIVATE_APIS: 'supress-warning' }.`\r\n    }\r\n};\r\nconst instanceWarned = Object.create(null);\r\nconst warnCount = Object.create(null);\r\nfunction warnDeprecation(key, instance, ...args) {\r\n    if (!(process.env.NODE_ENV !== 'production')) {\r\n        return;\r\n    }\r\n    instance = instance || getCurrentInstance();\r\n    // check user config\r\n    const config = getCompatConfigForKey(key, instance);\r\n    if (config === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const dupKey = key + args.join('');\r\n    let compId = instance && formatComponentName(instance, instance.type);\r\n    if (compId === 'Anonymous' && instance) {\r\n        compId = instance.uid;\r\n    }\r\n    // skip if the same warning is emitted for the same component type\r\n    const componentDupKey = dupKey + compId;\r\n    if (componentDupKey in instanceWarned) {\r\n        return;\r\n    }\r\n    instanceWarned[componentDupKey] = true;\r\n    // same warning, but different component. skip the long message and just\r\n    // log the key and count.\r\n    if (dupKey in warnCount) {\r\n        warn(`(deprecation ${key}) (${++warnCount[dupKey] + 1})`);\r\n        return;\r\n    }\r\n    warnCount[dupKey] = 0;\r\n    const { message, link } = deprecationData[key];\r\n    warn(`(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`);\r\n    if (!isCompatEnabled(key, instance, true)) {\r\n        console.error(`^ The above deprecation's compat behavior is disabled and will likely ` +\r\n            `lead to runtime errors.`);\r\n    }\r\n}\r\nconst globalCompatConfig = {\r\n    MODE: 2\r\n};\r\nfunction getCompatConfigForKey(key, instance) {\r\n    const instanceConfig = instance && instance.type.compatConfig;\r\n    if (instanceConfig && key in instanceConfig) {\r\n        return instanceConfig[key];\r\n    }\r\n    return globalCompatConfig[key];\r\n}\r\nfunction isCompatEnabled(key, instance, enableForBuiltIn = false) {\r\n    // skip compat for built-in components\r\n    if (!enableForBuiltIn && instance && instance.type.__isBuiltIn) {\r\n        return false;\r\n    }\r\n    const rawMode = getCompatConfigForKey('MODE', instance) || 2;\r\n    const val = getCompatConfigForKey(key, instance);\r\n    const mode = isFunction$1(rawMode)\r\n        ? rawMode(instance && instance.type)\r\n        : rawMode;\r\n    if (mode === 2) {\r\n        return val !== false;\r\n    }\r\n    else {\r\n        return val === true || val === 'suppress-warning';\r\n    }\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction$1(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, null);\r\n        return null;\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    cache.set(comp, normalized);\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (fallthroughAttrs && inheritAttrs !== false) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment$1) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (false &&\r\n            isCompatEnabled(\"INSTANCE_ATTRS_CLASS_STYLE\" /* INSTANCE_ATTRS_CLASS_STYLE */, instance) &&\r\n            vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */ &&\r\n            (root.shapeFlag & 1 /* ELEMENT */ ||\r\n                root.shapeFlag & 6 /* COMPONENT */)) ;\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment$1);\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment$1 || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment$1 // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (isFunction$1(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (isFunction$1(s)) {\r\n        const isCompiledSlot = s._c;\r\n        if (isCompiledSlot) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (isCompiledSlot) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction$1(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction$1(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(isReactive);\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction$1(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction$1(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\r\n                    : hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (isFunction$1(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject$1(value) || value[\"__v_skip\" /* SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment$1 &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment$1) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment$1) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction$1(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction$1(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject$1(comp) && !isFunction$1(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction$1(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction$1(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if ((process.env.NODE_ENV !== 'production') && isPromise$1(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!isObject$1(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactive(data);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (key[0] !== '$' && key[0] !== '_') {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction$1(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction$1(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction$1(opt) && isFunction$1(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction$1(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {\r\n    if (isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        if (isObject$1(opt)) {\r\n            if ('default' in opt) {\r\n                ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                ctx[key] = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = inject(opt);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction$1(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction$1(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject$1(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction$1(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction$1(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    cache.set(base, resolved);\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (extend)(isFunction$1(to) ? to.call(this, this) : to, isFunction$1(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? extend(extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        const castValues = rawCastValues || EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction$1(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    setCurrentInstance(null);\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, EMPTY_ARR);\r\n        return EMPTY_ARR;\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject$1(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction$1(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction$1(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject$1(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    const normalized = withCtx((props) => {\r\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(props));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction$1(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !(false )) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction$1(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            resetTracking();\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject$1(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction$1(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction$1(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment$1:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        if (forcePatchValue || patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (isOn(key) && !isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfStart(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfEnd(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            {\r\n                refs[ref] = value;\r\n            }\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction$1(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = (process.env.NODE_ENV !== 'production') && isHmrUpdating ? false : !!n2.dynamicChildren) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment$1:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                    oldVNode.shapeFlag & 64 /* TELEPORT */)\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (dynamicChildren) {\r\n            optimized = true;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment$1));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapper(initialVNode)) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // @ts-ignore\r\n            instance.update.ownerInstance = instance;\r\n        }\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment$1 && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment$1 = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction$1(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment$1;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject$1(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject$1(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction$1(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        type.normalize(vnode);\r\n    }\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment$1, null, text))\r\n        : createVNode(Comment$1, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment$1);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* STABLE */) {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction$1(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject$1(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment$1)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject$1(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            setupState !== EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup && (key[0] === '$' || key[0] === '_')) {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise$1(setupResult)) {\r\n            const unsetInstance = () => {\r\n                currentInstance = null;\r\n            };\r\n            setupResult.then(unsetInstance, unsetInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction$1(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject$1(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && !Component.render) {\r\n            const template = Component.template;\r\n            if (template) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = extend(extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__ && !(false )) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrDevProxyHandlers = {\r\n    get: (target, key) => {\r\n        markAttrsAccessed();\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        let attrs;\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return (attrs || (attrs = new Proxy(instance.attrs, attrDevProxyHandlers)));\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction$1(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction$1(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @deprecated use `defineEmits` instead.\r\n */\r\nconst defineEmit = defineEmits;\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. varaibles inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` decalration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @deprecated use `useSlots` and `useAttrs` instead.\r\n */\r\nfunction useContext() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`\\`useContext()\\` has been deprecated and will be removed in the ` +\r\n            `next minor release. Use \\`useSlots()\\` and \\`useAttrs()\\` instead.`);\r\n    }\r\n    return getContext();\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(\r\n// the base props is compiler-generated and guaranteed to be in this shape.\r\nprops, defaults) {\r\n    for (const key in defaults) {\r\n        const val = props[key];\r\n        if (val) {\r\n            val.default = defaults[key];\r\n        }\r\n        else if (val === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    let awaitable = getAwaitable();\r\n    setCurrentInstance(null);\r\n    if (isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject$1(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject$1(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject$1(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction$1(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject$1(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.1.5\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment$1 as Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useContext, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, Static, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst staticTemplateCache = new Map();\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        let template = staticTemplateCache.get(content);\r\n        if (!template) {\r\n            const t = doc.createElement('template');\r\n            t.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\r\n            template = t.content;\r\n            if (isSVG) {\r\n                // remove outer svg wrapper\r\n                const wrapper = template.firstChild;\r\n                while (wrapper.firstChild) {\r\n                    template.appendChild(wrapper.firstChild);\r\n                }\r\n                template.removeChild(wrapper);\r\n            }\r\n            staticTemplateCache.set(content, template);\r\n        }\r\n        parent.insertBefore(template.cloneNode(true), anchor);\r\n        return [\r\n            // first\r\n            before ? before.nextSibling : parent.firstChild,\r\n            // last\r\n            anchor ? anchor.previousSibling : parent.lastChild\r\n        ];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value\r\n            ? [value, ...transitionClasses]\r\n            : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n            try {\r\n                el[key] = 0;\r\n            }\r\n            catch (_a) { }\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        setVarsOnNode(vnode.el, vars);\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n    else if (vnode.type === Static) {\r\n        let { el, anchor } = vnode;\r\n        while (el) {\r\n            setVarsOnNode(el, vars);\r\n            if (el === anchor)\r\n                break;\r\n            el = el.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction setVarsOnNode(el, vars) {\r\n    if (el.nodeType === 1) {\r\n        const style = el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    // #4096 array checkboxes need to be deep traversed\r\n    deep: true,\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // <select multiple> value need to be deep traversed\r\n    deep: true,\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const isCustomElement = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return isCustomElement;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\r\n            }\r\n        });\r\n        const compilerOptions = app.config.compilerOptions;\r\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\r\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\r\n        Object.defineProperty(app.config, 'compilerOptions', {\r\n            get() {\r\n                warn(msg);\r\n                return compilerOptions;\r\n            },\r\n            set() {\r\n                warn(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","<script>\nexport default {\n  name: \"combat-log\",\n  props: ['pcs','actions'],\n  data() {\n    return {\n      'characters': this.pcs,\n    };\n  }\n};\n</script>\n\n<template>\n  <table>\n    <thead>\n    <tr>\n      <th scope=\"col\" id=\"character\">Character</th>\n      <th scope=\"col\" id=\"init\">Init</th>\n      <th scope=\"col\" id=\"dice\">Dice</th>\n      <th scope=\"col\" id=\"initiative\">Initiative</th>\n      <th scope=\"col\" id=\"actions\">Actions</th>\n      <th scope=\"col\" id=\"interrupts\">Interrupts</th>\n      <th scope=\"col\" id=\"damage\">Damage</th>\n      <th scope=\"col\" id=\"score\">Score</th>\n      <th scope=\"col\" id=\"notes\">Notes</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr v-for=\"character in characters\">\n      <td headers=\"character\">{{ character }}</td>\n      <td headers=\"init\"><input type=\"number\" value=\"0\" min=\"0\" max=\"25\" step=\"1\"></td>\n      <td headers=\"dice\"><input type=\"number\" value=\"0\" min=\"0\" max=\"5\" step=\"1\"></td>\n      <td headers=\"initiative\"></td>\n      <td headers=\"actions\"></td>\n      <td headers=\"interrupts\">\n        <select>\n          <option value=\"\"></option>\n          <option v-for=\"(cost, action) in actions\" :value=\"cost\">\n            {{ action }}\n          </option>\n        </select>\n      </td>\n      <td headers=\"damage\"></td>\n      <td headers=\"score\"></td>\n      <td headers=\"notes\"></td>\n    </tr>\n    </tbody>\n  </table>\n\n\n</template>\n\n<style lang=\"scss\" scoped>\n  table {\n    border: 1px solid black;\n    border-collapse: collapse;\n    width: 100%;\n  }\n\n  td, th {\n    padding: .25rem;\n    text-align: left;\n  }\n\n  thead th {\n    vertical-align: bottom;\n\n    #init,\n    #dice {\n      width: 50px;\n    }\n  }\n\n  tbody tr {\n    &:hover {\n      background: antiquewhite;\n    }\n\n    td, th {\n      border-top: 1px solid black;\n      vertical-align: top;\n    }\n  }\n</style>\n","import { render } from \"./combat-log.vue?vue&type=template&id=f58361dc&scoped=true\"\nimport script from \"./combat-log.vue?vue&type=script&lang=js\"\nexport * from \"./combat-log.vue?vue&type=script&lang=js\"\n\nimport \"./combat-log.vue?vue&type=style&index=0&id=f58361dc&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-f58361dc\"\n\nexport default script","import {createApp} from 'vue';\nimport CombatLog from './components/combat-log.vue';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  for (let log of document.getElementsByTagName('combat-log')) {\n\n    // there should only ever be a single combat log in the DOM.  but, looping\n    // is a handy way to confirm that we both found a log and then to actually\n    // mount of CombatLog component onto it.\n\n    let app = createApp(CombatLog, {\n      \"pcs\": [\n        'Doc',\n        'Donut',\n        'Dylan',\n        'Sylvie',\n        'Zee'\n      ],\n      \"actions\": {\n        \"Block\": 5,\n        \"Counterstrike\": 7,\n        \"Dive for Cover\": 5,\n        \"Dive on the Grenade\": 5,\n        \"Dodge\": 5,\n        \"Full Defense\": 10,\n        \"Hit the Dirt\": 5,\n        \"I Am the Firewall\": 5,\n        \"Intercept\": 5,\n        \"Intervene\": 5,\n        \"Parry\": 5,\n        \"Protecting the Principle\": 5,\n        \"Push (Intercept)\": 5,\n        \"Reversal (Clinch)\": 7,\n        \"Reversal (Subduing)\": 7,\n        \"Right Back aat Ya!\": 10,\n        \"Riposte\": 7,\n        \"Run for Your Life\": 5,\n        \"Sacrifice Throw\": 10,\n        \"Shadow Block v. Dodge\": 5,\n        \"Shadow Block v. Evade\": 5,\n        \"Throw Person\": 10,\n      }\n    });\n\n    app.mount(log);\n  }\n});\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","_arrayLikeToArray","arr","len","arr2","Array","_item","isArray","_arrayWithHoles","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","value","err","_iterableToArrayLimit","o","minLen","n","Object","prototype","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","__esModule","default","locals","add","listToStyles","parentId","styles","newStyles","part","css","media","sourceMap","parts","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","type","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","bind","applyToTag","newObj","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","d","a","definition","key","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","hasOwnProperty","r","toStringTag","str","expectsLowerCase","create","split","val","isGloballyWhitelisted","isSpecialBooleanAttr","normalizeStyle","res","normalized","parseStringStyle","listDelimiterRE","propertyDelimiterRE","ret","forEach","tmp","trim","normalizeClass","toDisplayString","replacer","String","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","EMPTY_ARR","onRE","isModelListener","startsWith","assign","el","indexOf","splice","toTypeString","isFunction","isSymbol","isPromise","then","catch","objectToString","isIntegerKey","parseInt","cacheStringFunction","fn","cache","camelizeRE","replace","_","c","toUpperCase","hyphenateRE","charAt","oldValue","fns","arg","def","configurable","toNumber","parseFloat","isNaN","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","effect","_isEffect","isEffect","raw","active","includes","cleanup","trackStack","shouldTrack","pop","resetTracking","uid","allowRecurse","deps","createReactiveEffect","lazy","stop","onStop","delete","pauseTracking","last","track","target","depsMap","set","Map","dep","Set","has","trigger","newValue","oldTarget","effects","effectsToAdd","scheduler","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","l","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","readonly","reactive","createSetter","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","isKeyOnly","innerIterator","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","proxy","Proxy","isProxy","markRaw","__v_isRef","shallowUnwrapHandlers","unref","ref","proxyRefs","objectWithRefs","ComputedRefImpl","_setter","_dirty","self","_value","callWithErrorHandling","instance","handleError","callWithAsyncErrorHandling","throwInDev","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","contextVNode","console","error","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","queueJob","job","pos","start","end","jobId","getId","middle","findInsertionIndex","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","b","Infinity","emit","event","rawArgs","props","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","emitsCache","cached","emits","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","renderFnWithContext","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","keys","some","filterModelListeners","cloneVNode","dirs","transition","blockStack","createVNode","Comment$1","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","inject","defaultValue","treatDefaultAsFactory","currentInstance","provides","arguments","INITIAL_WATCHER_VALUE","watch","doWatch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","isMultiSource","_shallow","s","traverse","isUnmounted","onInvalidate","baseGetter","runner","queuePostRenderEffect","suspense","isMounted","queuePreFlushCb","recordInstanceBoundEffect","instanceWatch","publicThis","createPathGetter","path","segments","TransitionHookValidator","BaseTransition","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","state","isLeaving","isUnmounting","leavingVNodes","onBeforeUnmount","useTransitionState","prevTransitionKey","children","getTransitionRawChildren","rawProps","child","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","subTree","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","hook","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","component","ssContent","ssFallback","keepComment","keyedFragmentCount","patchFlag","isAsyncWrapper","__asyncLoader","__isKeepAlive","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","current","isDeactivated","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","__weh","setCurrentInstance","unshift","RegExp","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","shouldCacheAccess","h","createWatcher","resolveMergedOptions","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","m","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","methods","computed","beforeCreate","mergeAsArray","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","components","directives","merged","provide","normalizeInject","setFullProps","needCastKeys","rawCastValues","hasAttrsChanged","camelKey","rawCurrentProps","castValues","resolvePropValue","isAbsent","opt","hasDefault","propsDefaults","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","findIndex","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","invokeDirectiveHook","prevVNode","bindings","oldBindings","binding","dir","createAppContext","app","isNativeTag","performance","globalProperties","warnHandler","compilerOptions","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","isSVG","__vue_app__","unmount","prodEffectOptions","pendingBranch","setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","getExposeProxy","oldRef","owner","doSet","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","optimized","dynamicChildren","getNextHostNode","Text","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","scopeId","needCallTransitionHooks","onVnodeMounted","parentVNode","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","propsToUpdate","dynamicProps","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","emptyAppContext","uid$1","exposed","exposeProxy","accessCache","setupContext","suspenseId","pendingId","asyncDep","asyncResolved","bc","bm","bu","u","um","bum","da","rtg","rtc","sp","createComponentInstance","renderer","isSSR","isStateful","isStatefulComponent","InternalObjectKey","initProps","initSlots","PublicInstanceProxyHandlers","expose","createSetupContext","setupResult","unsetInstance","resolvedResult","handleSetupResult","finishComponentSetup","setupStatefulComponent","setupComponent","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","invalidateJob","originNext","nextTree","prevTree","updateHOCHostEl","hydrateNode","hydrateSubTree","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","move","moveType","performLeave","moveStaticNode","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","removeStaticNode","performRemove","_vnode","mt","mc","pc","pbc","createApp","ch1","ch2","NULL_DYNAMIC_COMPONENT","currentBlock","openBlock","disableTracking","isBlockTreeEnabled","createBlock","isVNode","__v_isVNode","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","__vccOpts","klass","__isSuspense","isSuspense","__isTeleport","isTeleport","__v_skip","targetAnchor","normalize","extraProps","mergeRef","mergedProps","toMerge","existing","incoming","mergeProps","staticCount","createTextVNode","text","flag","slot","slotFlag","renderList","renderItem","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","skipOptions","_rc","dataOptions","computedOptions","watchOptions","provideOptions","injectOptions","beforeUnmount","unmounted","renderTracked","renderTriggered","filters","checkDuplicateProperties","resolveInjections","methodHandler","parentProvides","registerLifecycleHook","register","_hook","applyOptions","getterOrOptions","setter","doc","staticTemplateCache","nodeOps","tag","createElementNS","multiple","node","nodeValue","textContent","selector","before","previousSibling","lastChild","template","innerHTML","wrapper","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","Date","now","skipTimestampCheck","createEvent","timeStamp","ffMatch","cachedNow","optionsModifierRE","nativeOnRE","TRANSITION","ANIMATION","Transition","propsOrChildren","baseProps","DOMTransitionPropsValidators","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","hasExplicitCallback","whenTransitionEnds","body","offsetHeight","resolveTransitionProps","displayName","cls","classList","_vtc","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","getTransitionInfo","endEvent","ended","removeEventListener","onEnd","addEventListener","delays","toMs","rendererOptions","prevValue","nextValue","transitionClasses","removeAttribute","className","patchClass","display","patchStyle","invokers","_vei","existingInvoker","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","createInvoker","patchEvent","tagName","shouldSetAsProp","_a","patchDOMProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","patchAttr","containerOrSelector","normalizeContainer","SVGElement","Element","scope","headers","step","characters","character","actions","cost","action","pcs","log"],"sourceRoot":""}