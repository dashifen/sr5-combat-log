{"version":3,"file":"sr5-combat-log.css","mappings":";AA8GA;EACE,eAAe;EACf,qBAAqB;EACrB,kBAAkB;EAClB,iBAAiB;EACjB,0BAA0B;EAC1B,WAAW;AACb;AAEA;EACE,UAAU;AACZ;AAEA;EACE,aAAa;AACf;;;ACrDA;EACE,uBAAuB;EACvB,yBAAyB;EACzB,oBAAoB;EACpB,WAAW;AACb;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;AAEA;EACE,sBAAsB;AACxB;AAEA;EACE,wBAAwB;AAC1B;AAEA;;EAEE,2BAA2B;EAC3B,mBAAmB;AACrB;AAEA;;;;EAIE,kBAAkB;AACpB;AAEA;;EAEE,WAAW;AACb;AAEA;;EAEE,YAAY;AACd;AAEA;;;;;;EAME,YAAY;AACd;AAEA;EACE,WAAW;AACb;AAEA;EACE,iBAAiB;EACjB,oBAAoB;EACpB,sBAAsB;AACxB;AAEA;EACE,mBAAmB;AACrB","sources":["webpack://dashifen-sr5-combat-log/./assets/scripts/components/character.vue","webpack://dashifen-sr5-combat-log/./assets/scripts/components/combat-log.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  watcher: null,\r\n  name: 'character',\r\n  props: ['dataCharacter', 'dataIndex'],\r\n  computed: {\r\n    character() {\r\n      return this.$store.getters.character(this.dataIndex);\r\n    },\r\n\r\n    isPlayer() {\r\n      return this.character.type === 'pc';\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    setInitiative(event) {\r\n      this.commitChange('initiative', event.target.value);\r\n    },\r\n\r\n    commitChange(property, value) {\r\n      this.$store.commit('setCharacterProperty', {\r\n        index: this.dataIndex,\r\n        property: property,\r\n        value: value,\r\n      });\r\n    },\r\n\r\n    setDice(event) {\r\n      this.commitChange('dice', event.target.value);\r\n    },\r\n\r\n    setRoll(event) {\r\n      this.commitChange('roll', event.target.value);\r\n    },\r\n\r\n    interrupt(event) {\r\n      setTimeout(() => event.target.selectedIndex = 0, 1500);\r\n      const cost = Number(event.target.options[event.target.selectedIndex].value);\r\n      const current = this.$store.state.characters[this.dataIndex].interrupts;\r\n      this.commitChange('interrupts', current + cost);\r\n    },\r\n\r\n    setDamage(event) {\r\n      this.commitChange('damage', event.target.value);\r\n    },\r\n\r\n    setNotes(event) {\r\n      this.commitChange('notes', event.target.value);\r\n    },\r\n\r\n    removeCharacter(characterName) {\r\n      if (confirm('Remove ' + characterName + '?')) {\r\n        this.$store.commit('removeCharacter', characterName);\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.$watch(\r\n        () => this.$store.state.phase,\r\n        () => {\r\n          this.$refs.acted.checked = false;\r\n        }\r\n    );\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <tr :data-type=\"isPlayer ? 'pc' : 'npc'\">\r\n    <td headers=\"character\" v-text=\"dataCharacter.name\"></td>\r\n    <td headers=\"init\">\r\n      <input type=\"number\" :value=\"this.character.initiative\"\r\n          @change=\"setInitiative\" min=\"2\" max=\"25\" step=\"1\" :disabled=\"isPlayer\">\r\n    </td>\r\n    <td headers=\"dice\">\r\n      <input type=\"number\" :value=\"this.character.dice\"\r\n          @change=\"setDice\" min=\"1\" max=\"5\" step=\"1\" :disabled=\"isPlayer\">\r\n    </td>\r\n    <td headers=\"roll\">\r\n      <input type=\"text\" :value=\"this.character.roll\"\r\n          @change=\"setRoll\" :disabled=\"!isPlayer\"></td>\r\n    <td headers=\"acted\">\r\n      <input type=\"checkbox\" ref=\"acted\" tabindex=\"-1\">\r\n    </td>\r\n    <td headers=\"interrupts\">\r\n      <select @change=\"interrupt\" tabindex=\"-1\">\r\n        <option value=\"0\"></option>\r\n        <option v-for=\"(cost, action) in this.$store.state.interrupts\"\r\n            :value=\"cost\" tabindex=\"-1\">\r\n          {{ action }} ({{ cost }})\r\n        </option>\r\n      </select>\r\n    </td>\r\n    <td headers=\"damage\">\r\n      <input type=\"number\" :value=\"this.character.damage\"\r\n          @change=\"setDamage\" min=\"0\" max=\"20\" tabindex=\"-1\">\r\n    </td>\r\n    <td headers=\"initiative\" v-text=\"this.character.score\"></td>\r\n    <td headers=\"notes\">\r\n      <input type=\"text\" :value=\"this.character.notes\" @change=\"setNotes\">\r\n    </td>\r\n    <td headers=\"remover\">\r\n      <span class=\"remover\" @click=\"removeCharacter(dataCharacter.name)\">&times;</span>\r\n    </td>\r\n  </tr>\r\n</template>\r\n\r\n<style>\r\n.remover {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  grid-area: remover;\r\n  text-align: right;\r\n  text-decoration: underline;\r\n  width: 100%;\r\n}\r\n\r\n.remover:hover {\r\n  color: red;\r\n}\r\n\r\ninput[type=number][disabled] {\r\n  display: none;\r\n}\r\n</style>\r\n","<script>\r\nimport character from './character.vue';\r\n\r\nexport default {\r\n  name: 'combat-log',\r\n  components: {character},\r\n  computed: {\r\n    phase() {\r\n      return this.$store.state.phase;\r\n    }\r\n  },\r\n  methods: {\r\n    addGoon() {\r\n\r\n      // adding a goon doesn't require a prompt; they just get a name like\r\n      // Human A or Ork B.\r\n\r\n      this.$store.commit('addCharacter');\r\n    },\r\n\r\n    addLieutenant() {\r\n\r\n      // lieutenants get some sort of name, so that might be a proper name or\r\n      // an archetype, so maybe Auggie or Hacker.\r\n\r\n      this.$store.commit('addCharacter', prompt('Enter Lieutenant'));\r\n    },\r\n\r\n    sort() {\r\n      this.$store.commit('sort');\r\n    },\r\n\r\n    endPhase() {\r\n      this.$store.commit('endPhase');\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <table>\r\n    <caption>Phase {{ this.$store.state.phase }}</caption>\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\" id=\"character\">Character</th>\r\n        <th scope=\"col\" id=\"init\">Init</th>\r\n        <th scope=\"col\" id=\"dice\">Dice</th>\r\n        <th scope=\"col\" id=\"roll\">Roll</th>\r\n        <th scope=\"col\" id=\"acted\">Acted</th>\r\n        <th scope=\"col\" id=\"interrupts\">Interrupts</th>\r\n        <th scope=\"col\" id=\"damage\">Damage</th>\r\n        <th scope=\"col\" id=\"initiative\">Initiative</th>\r\n        <th scope=\"col\" id=\"notes\">Notes</th>\r\n        <th scope=\"col\" id=\"remover\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr is=\"vue:character\" v-for=\"(character, index) in this.$store.state.characters\"\r\n          :data-character=\"character\"\r\n          :data-index=\"index\">\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <button type=\"button\" @click=\"addGoon\">Add Grunt</button>\r\n  <button type=\"button\" @click=\"addLieutenant\">Add Lieutenant</button>\r\n  <button type=\"button\" @click=\"sort\">Sort</button>\r\n  <button type=\"button\" @click=\"endPhase\">End Phase {{ phase }}</button>\r\n\r\n</template>\r\n\r\n<style>\r\ntable {\r\n  border: 1px solid black;\r\n  border-collapse: collapse;\r\n  margin-bottom: .5rem;\r\n  width: 100%;\r\n}\r\n\r\ntd, th {\r\n  padding: .25rem;\r\n  text-align: left;\r\n}\r\n\r\nthead th {\r\n  vertical-align: bottom;\r\n}\r\n\r\ntbody tr:hover {\r\n  background: antiquewhite;\r\n}\r\n\r\ntbody tr td,\r\ntbody tr th {\r\n  border-top: 1px solid black;\r\n  vertical-align: top;\r\n}\r\n\r\nth#acted,\r\nth#initiative,\r\n[headers=acted],\r\n[headers=initiative] {\r\n  text-align: center;\r\n}\r\n\r\n[headers=roll] input,\r\ninput[type=number] {\r\n  width: 50px;\r\n}\r\n\r\nth#interrupts,\r\n[headers=interrupts] {\r\n  width: 200px;\r\n}\r\n\r\nth#acted,\r\nth#damage,\r\nth#initiative,\r\n[headers=acted],\r\n[headers=damage],\r\n[headers=initiative] {\r\n  width: 100px;\r\n}\r\n\r\n[headers=notes] input {\r\n  width: 100%;\r\n}\r\n\r\nbutton {\r\n  font-size: .75rem;\r\n  margin-right: .25rem;\r\n  padding: .15rem .25rem;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: .25rem;\r\n}\r\n</style>\r\n"],"names":[],"sourceRoot":""}